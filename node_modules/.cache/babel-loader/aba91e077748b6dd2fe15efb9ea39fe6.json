{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\cnpmm\\\\New folder\\\\Frontend-React.JS-QuickStart\\\\src\\\\containers\\\\Auth\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { push } from \"connected-react-router\";\nimport * as actions from \"../../store/actions\";\nimport './Login.scss';\nimport { FormattedMessage } from 'react-intl';\nimport { handleLoginApi } from '../../services/userServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnchangeUsername = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handleOnchangePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleLogin = async () => {\n      console.log('username:', this.state.username, 'password:', this.state.password);\n      console.log('all state', this.state);\n      await handleLoginApi.handleLogin(this.state.username, this.state.password);\n    };\n\n    this.handleShowHidePassword = () => {\n      this.setState({\n        isShowPassword: !this.state.isShowPassword\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      isShowPassword: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-containers\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 text-login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 form-group login-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Enter your username\",\n              value: this.state.username,\n              onChange: event => this.handleOnchangeUsername(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 form-group login-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-input-password\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: this.state.isShowPassword ? 'text' : 'password',\n                placeholder: \"Enter your password\",\n                onChange: event => this.handleOnchangePassword(event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => this.handleShowHidePassword(),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: this.state.isShowPassword ? 'far fa-eye' : 'far fa-eye-slash'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 btn-login\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-login\",\n              onClick: () => {\n                this.handleLogin();\n              },\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"forgot-password\",\n              children: \"Forgot your password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 text-center mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-other-login\",\n              children: \"Or Login with:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 social-login\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-google-plus-g google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-facebook facebook\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    navigate: path => dispatch(push(path)),\n    adminLoginSuccess: adminInfo => dispatch(actions.adminLoginSuccess(adminInfo)),\n    adminLoginFail: () => dispatch(actions.adminLoginFail())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/cnpmm/New folder/Frontend-React.JS-QuickStart/src/containers/Auth/Login.js"],"names":["React","Component","connect","push","actions","FormattedMessage","handleLoginApi","Login","constructor","props","handleOnchangeUsername","event","setState","username","target","value","handleOnchangePassword","password","handleLogin","console","log","state","handleShowHidePassword","isShowPassword","render","mapStateToProps","language","app","mapDispatchToProps","dispatch","navigate","path","adminLoginSuccess","adminInfo","adminLoginFail"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport{handleLoginApi} from '../../services/userServices';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            username:'',\r\n            password:'',\r\n            isShowPassword: false,\r\n        }\r\n        \r\n    }\r\n    handleOnchangeUsername=(event)=>{\r\n        this.setState(\r\n            {\r\n                username: event.target.value\r\n            }\r\n        )\r\n        \r\n    }\r\n    handleOnchangePassword=(event)=>{\r\n        this.setState(\r\n            {\r\n                password: event.target.value\r\n            }\r\n        )\r\n       \r\n    }\r\n    handleLogin=async()=>{\r\n        console.log('username:',this.state.username,'password:',this.state.password)\r\n        console.log('all state',this.state)\r\n        await handleLoginApi.handleLogin(this.state.username,this.state.password);\r\n    }\r\n    handleShowHidePassword=()=>{\r\n      this.setState(\r\n          {\r\n              isShowPassword: !this.state.isShowPassword\r\n          }\r\n      )\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"login-background\">\r\n                <div className=\"login-containers\">\r\n                    <div className=\"login-content\">\r\n                        <div className=\"col-12 text-login\">Login</div>\r\n                        <div className=\"col-12 form-group login-input\">\r\n                            <label>Username:</label>\r\n                            <input  type=\"text\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Enter your username\"\r\n                            value={this.state.username}\r\n                            onChange={(event)=>this.handleOnchangeUsername(event)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 form-group login-input\">\r\n                            <label>Password:</label>\r\n                            <div className=\"custom-input-password\">                              \r\n                            <input  \r\n                            className=\"form-control\"\r\n                            type={this.state.isShowPassword ?'text':'password'} \r\n                            placeholder=\"Enter your password\"\r\n                            onChange={(event)=>this.handleOnchangePassword(event)}\r\n                            />                         \r\n                            <span\r\n                                onClick={()=>this.handleShowHidePassword()}\r\n                            ><i class={this.state.isShowPassword ?'far fa-eye':'far fa-eye-slash'}></i></span>\r\n                            </div>\r\n                            \r\n\r\n                        </div>\r\n                        <div className=\"col-12 btn-login\">\r\n                        <button className=\"btn-login\" onClick={()=>{this.handleLogin()}}>Login</button>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-12\">\r\n                            <span className=\"forgot-password\">Forgot your password?</span>\r\n                        </div>\r\n                        <div className=\"col-12 text-center mt-3\">\r\n                            <span className=\"text-other-login\">Or Login with:</span>\r\n                        </div>\r\n                        <div className=\"col-12 social-login\" >\r\n                        <i className=\"fab fa-google-plus-g google\"></i>\r\n                        <i className=\"fab fa-facebook facebook\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        adminLoginSuccess: (adminInfo) => dispatch(actions.adminLoginSuccess(adminInfo)),\r\n        adminLoginFail: () => dispatch(actions.adminLoginFail()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}