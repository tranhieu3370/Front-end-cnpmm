{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\cnpmm\\\\New folder\\\\project\\\\Frontend-React.JS-QuickStart\\\\src\\\\containers\\\\System\\\\ModalUser.js\";\nimport { Button, Label, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.props.toggleFromParent();\n    };\n\n    this.handleOnChangeInput = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.checkValideInput = () => {\n      let isValid = true;\n      let arrInput = ['email', 'password', 'firstName', 'lastName', 'phonenumber', 'address'];\n\n      for (let i = 0; i < arrInput.length; i++) {\n        if (!this.state[arrInput[i]]) {\n          isValid = false;\n          alert('vui long nhap vao ' + arrInput[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleAddNewUser = () => {\n      let isValid = this.checkValideInput();\n\n      if (isValid == true) {\n        //goi api\n        this.props.createNewuser(this.state);\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      address: '',\n      phonenumber: ''\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.props.isOpen,\n      toggle: () => {\n        this.toggle();\n      },\n      className: 'modal-user-container',\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          this.toggle();\n        },\n        children: \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-user-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"email\");\n              },\n              value: this.state.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"password\");\n              },\n              value: this.state.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"firstName\");\n              },\n              value: this.state.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"lastName\");\n              },\n              value: this.state.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"phonenumber\");\n              },\n              value: this.state.phonenumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container max-width-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"address\");\n              },\n              value: this.state.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"px-3\",\n          onClick: () => {\n            this.handleAddNewUser();\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), '', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          className: \"px-3\",\n          onClick: () => {\n            this.toggle();\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/cnpmm/New folder/project/Frontend-React.JS-QuickStart/src/containers/System/ModalUser.js"],"names":["Button","Label","Modal","ModalBody","ModalFooter","ModalHeader","React","Component","FormattedMessage","connect","ModalUser","constructor","props","toggle","toggleFromParent","handleOnChangeInput","event","id","copyState","state","target","value","setState","checkValideInput","isValid","arrInput","i","length","alert","handleAddNewUser","createNewuser","email","password","firstName","lastName","address","phonenumber","componentDidMount","render","isOpen","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\r\nimport { Button,Label,Modal,ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass ModalUser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email:'',\r\n            password:'',\r\n            firstName:'',\r\n            lastName:'',\r\n            address:'',\r\n            phonenumber:'',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    toggle=()=>{\r\n       this.props.toggleFromParent();\r\n    }\r\n    handleOnChangeInput=(event,id)=>{\r\n        let copyState={...this.state};\r\n        copyState[id]=event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n      \r\n    }\r\n    checkValideInput=()=>{\r\n        let isValid=true;\r\n        let arrInput=['email','password','firstName','lastName','phonenumber','address'];\r\n        for(let i=0;i<arrInput.length;i++)\r\n        {\r\n            if(!this.state[arrInput[i]]){\r\n                isValid=false;\r\n                alert('vui long nhap vao ' + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n    handleAddNewUser=()=>{\r\n        let isValid=this.checkValideInput();\r\n        if(isValid==true){\r\n            //goi api\r\n            this.props.createNewuser(this.state);\r\n        }    \r\n    }\r\n    render() {\r\n        return (  \r\n                <Modal \r\n                 isOpen={this.props.isOpen}\r\n                 toggle={()=>{this.toggle()}} \r\n                 className={'modal-user-container'}\r\n                 size=\"lg\"\r\n                 >\r\n                    <ModalHeader toggle={()=>{this.toggle()}}>Create a new user</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"modal-user-body\">\r\n                            <div className=\"input-container\">\r\n                                    <label>Email</label>\r\n                                     <input type=\"text\" \r\n                                     onChange={(event)=>{this.handleOnChangeInput(event,\"email\")}}\r\n                                     value={this.state.email}\r\n                                     />\r\n                                </div>\r\n                            <div className=\"input-container\">\r\n                                    <label>Password</label>\r\n                                     <input type=\"password\" \r\n                                     onChange={(event)=>{this.handleOnChangeInput(event,\"password\")}}\r\n                                     value={this.state.password}/>\r\n                                </div>\r\n                            <div className=\"input-container\">\r\n                                    <label>First name</label>\r\n                                     <input type=\"text\"  \r\n                                     onChange={(event)=>{this.handleOnChangeInput(event,\"firstName\")}}\r\n                                     value={this.state.firstName}/>\r\n                                </div>\r\n                            <div className=\"input-container\">\r\n                                    <label>Last name</label>\r\n                                     <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event,\"lastName\")}}\r\n                                      value={this.state.lastName}/>\r\n                                </div>\r\n                            <div className=\"input-container\">\r\n                                    <label>Phone Number</label>\r\n                                     <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event,\"phonenumber\")}}\r\n                                      value={this.state.phonenumber}/>\r\n                                </div>\r\n                            \r\n                            <div className=\"input-container max-width-input\">\r\n                                    <label>Address</label>\r\n                                     <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event,\"address\")}}\r\n                                     value={this.state.address}\r\n                                     />\r\n                                </div> \r\n                        </div>\r\n                                \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button \r\n                        color=\"primary\" \r\n                        className=\"px-3\" \r\n                        onClick={()=>{this.handleAddNewUser()}}\r\n                        >Add</Button>{''}\r\n                        <Button color=\"secondary\" className=\"px-3\" onClick={()=>{this.toggle()}}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}