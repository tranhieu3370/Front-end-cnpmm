{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\cnpmm\\\\New folder\\\\Frontend-React.JS-QuickStart\\\\src\\\\containers\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { ConnectedRouter as Router } from 'connected-react-router';\nimport { history } from '../redux';\nimport { ToastContainer } from 'react-toastify';\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\nimport { path } from '../utils';\nimport Home from '../routes/Home'; //import Login from '../routes/Login';\n\nimport Login from './Auth/Login';\nimport Header from './Header/Header';\nimport System from '../routes/System';\nimport { CustomToastCloseButton } from '../components/CustomToast';\nimport ConfirmModal from '../components/ConfirmModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handlePersistorState = () => {\n      const {\n        persistor\n      } = this.props;\n      let {\n        bootstrapped\n      } = persistor.getState();\n\n      if (bootstrapped) {\n        if (this.props.onBeforeLift) {\n          Promise.resolve(this.props.onBeforeLift()).then(() => this.setState({\n            bootstrapped: true\n          })).catch(() => this.setState({\n            bootstrapped: true\n          }));\n        } else {\n          this.setState({\n            bootstrapped: true\n          });\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.handlePersistorState();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Router, {\n        history: history,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-container\",\n          children: [/*#__PURE__*/_jsxDEV(ConfirmModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), \" \", this.props.isLoggedIn && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"content-container\",\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: path.HOME,\n                exact: true,\n                component: Home\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n                path: path.LOGIN,\n                component: userIsNotAuthenticated(Login)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 16\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n                path: path.SYSTEM,\n                component: userIsAuthenticated(System)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 16\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n            className: \"toast-container\",\n            toastClassName: \"toast-item\",\n            bodyClassName: \"toast-item-body\",\n            autoClose: false,\n            hideProgressBar: true,\n            pauseOnHover: false,\n            pauseOnFocusLoss: true,\n            closeOnClick: false,\n            draggable: false,\n            closeButton: /*#__PURE__*/_jsxDEV(CustomToastCloseButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.app.started,\n    isLoggedIn: state.admin.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/cnpmm/New folder/Frontend-React.JS-QuickStart/src/containers/App.js"],"names":["React","Component","Fragment","connect","Route","Switch","ConnectedRouter","Router","history","ToastContainer","userIsAuthenticated","userIsNotAuthenticated","path","Home","Login","Header","System","CustomToastCloseButton","ConfirmModal","App","handlePersistorState","persistor","props","bootstrapped","getState","onBeforeLift","Promise","resolve","then","setState","catch","componentDidMount","render","isLoggedIn","HOME","LOGIN","SYSTEM","mapStateToProps","state","started","app","admin","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport { history } from '../redux'\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\r\n\r\nimport { path } from '../utils'\r\n\r\nimport Home from '../routes/Home';\r\n//import Login from '../routes/Login';\r\nimport Login from './Auth/Login';\r\nimport Header from './Header/Header';\r\nimport System from '../routes/System';\r\n\r\nimport { CustomToastCloseButton } from '../components/CustomToast';\r\nimport ConfirmModal from '../components/ConfirmModal';\r\n\r\nclass App extends Component {\r\n\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return ( <\r\n            Fragment >\r\n            <\r\n            Router history = { history } >\r\n            <\r\n            div className = \"main-container\" >\r\n            <\r\n            ConfirmModal / > { this.props.isLoggedIn && < Header / > }\r\n\r\n            <\r\n            span className = \"content-container\" >\r\n            <\r\n            Switch >\r\n            <\r\n            Route path = { path.HOME }\r\n            exact component = {\r\n                (Home) }\r\n            /> <\r\n            Route path = { path.LOGIN }\r\n            component = { userIsNotAuthenticated(Login) }\r\n            /> <\r\n            Route path = { path.SYSTEM }\r\n            component = { userIsAuthenticated(System) }\r\n            /> <\r\n            /Switch> <\r\n            /span>\r\n\r\n            <\r\n            ToastContainer className = \"toast-container\"\r\n            toastClassName = \"toast-item\"\r\n            bodyClassName = \"toast-item-body\"\r\n            autoClose = { false }\r\n            hideProgressBar = { true }\r\n            pauseOnHover = { false }\r\n            pauseOnFocusLoss = { true }\r\n            closeOnClick = { false }\r\n            draggable = { false }\r\n            closeButton = { < CustomToastCloseButton / > }\r\n            /> <\r\n            /div> <\r\n            /Router> <\r\n            /Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.admin.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}