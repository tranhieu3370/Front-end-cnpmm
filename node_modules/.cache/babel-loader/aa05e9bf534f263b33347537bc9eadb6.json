{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\cnpmm\\\\New folder\\\\project\\\\Frontend-React.JS-QuickStart\\\\src\\\\containers\\\\System\\\\ModalUser.js\";\nimport { Button, Label, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.props.toggleFromParent();\n    };\n\n    this.handleOnChangeInput = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n      console.log('event:', event.target.value, id);\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      address: '',\n      phoneNumber: ''\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.props.isOpen,\n      toggle: () => {\n        this.toggle();\n      },\n      className: 'modal-user-container',\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          this.toggle();\n        },\n        children: \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-user-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"email\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"password\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"firstName\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"lastName\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"address\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container max-width-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChangeInput(event, \"phoneNumber\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"px-3\",\n          onClick: () => {\n            this.toggle();\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), '', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          className: \"px-3\",\n          onClick: () => {\n            this.toggle();\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/cnpmm/New folder/project/Frontend-React.JS-QuickStart/src/containers/System/ModalUser.js"],"names":["Button","Label","Modal","ModalBody","ModalFooter","ModalHeader","React","Component","FormattedMessage","connect","ModalUser","constructor","props","toggle","toggleFromParent","handleOnChangeInput","event","id","copyState","state","target","value","setState","console","log","email","password","firstName","lastName","address","phoneNumber","componentDidMount","render","isOpen","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\r\nimport { Button,Label,Modal,ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass ModalUser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email:'',\r\n            password:'',\r\n            firstName:'',\r\n            lastName:'',\r\n            address:'',\r\n            phoneNumber:'',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    toggle=()=>{\r\n       this.props.toggleFromParent();\r\n    }\r\n    handleOnChangeInput=(event,id)=>{\r\n        let copyState={...this.state};\r\n        copyState[id]=event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n        console.log('event:',event.target.value,id)\r\n    }\r\n\r\n    render() {\r\n        return (  \r\n                <Modal \r\n                 isOpen={this.props.isOpen}\r\n                 toggle={()=>{this.toggle()}} \r\n                 className={'modal-user-container'}\r\n                 size=\"lg\"\r\n                 >\r\n                    <ModalHeader toggle={()=>{this.toggle()}}>Create a new user</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"modal-user-body\">\r\n                            <div className=\"input-container\">\r\n                                    <label>Email</label>\r\n                                     <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event,\"email\")}}/>\r\n                                </div>\r\n                            <div className=\"input-container\">\r\n                                    <label>Password</label>\r\n                                     <input type=\"password\" onChange={(event)=>{this.handleOnChangeInput(event,\"password\")}}/>\r\n                                </div>\r\n                            <div className=\"input-container\">\r\n                                    <label>First name</label>\r\n                                     <input type=\"text\"  onChange={(event)=>{this.handleOnChangeInput(event,\"firstName\")}}/>\r\n                                </div>\r\n                            <div className=\"input-container\">\r\n                                    <label>Last name</label>\r\n                                     <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event,\"lastName\")}}/>\r\n                                </div>\r\n                            <div className=\"input-container\">\r\n                                    <label>Phone Number</label>\r\n                                     <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event,\"address\")}}/>\r\n                                </div>\r\n                            \r\n                            <div className=\"input-container max-width-input\">\r\n                                    <label>Address</label>\r\n                                     <input type=\"text\" onChange={(event)=>{this.handleOnChangeInput(event,\"phoneNumber\")}}/>\r\n                                </div>\r\n                        </div>\r\n                                \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" className=\"px-3\" onClick={()=>{this.toggle()}}>Add</Button>{''}\r\n                        <Button color=\"secondary\" className=\"px-3\" onClick={()=>{this.toggle()}}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}